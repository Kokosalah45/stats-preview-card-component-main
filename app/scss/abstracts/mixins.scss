@use './breakpoints' as *;
@use 'sass:string';
/*BreakPoints*/
@mixin asLongMoreThanOrEqual($size) {
	@media (min-width: map-get($map: $breakPointsUpTo, $key: $size)) {
		@content;
	}
}

@mixin asLongLessThanOrEqual($size) {
	@media (max-width: map-get($map: $breakPointsDownUntil, $key: $size)) {
		@content;
	}
}
/*Center Container*/
@mixin centerContent($width, $maxWidth) {
	max-width: $maxWidth;
	width: $width;
	margin: 0 auto;
	@content;
}
/*Fonts for typography
@mixin setFont(
	$fontType,
	$fontSize,
	$fontWeight: "regular",
	$color: "default"
) {
	$fontKeyMap: map-get(
		$map: $fonts,
		$key: $fontType,
	);

	font-family: unquote(map-get($map: $fontKeyMap, $key: "type"));
	font-size: map-get($map: $fontKeyMap, $key: $fontSize);
	font-weight: map-get($map: $fontKeyMap, $key: $fontWeight);
	@if $color != "default" {
		color: $color;
	}

	@content;
}
*/
